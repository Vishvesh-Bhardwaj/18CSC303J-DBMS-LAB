
SQL*Plus: Release 11.2.0.4.0 Production on Mon Apr 17 14:04:16 2023

Copyright (c) 1982, 2013, Oracle.  All rights reserved.

Enter user-name: RA2011026010109/RA2011026010109@q1-q2-r1.c0vm8jxyhl5s.us-east-2.rds.amazonaws.com:1521/orcl

Connected to:
Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production

SQL> set serveroutput on;
SQL> CREATE OR REPLACE PROCEDURE greetings
  2      AS
  3      BEGIN
  4         dbms_output.put_line('Hello World!');
  5      END;
  6      /

Procedure created.

SQL> EXECUTE greetings
Hello World!

PL/SQL procedure successfully completed.

SQL> CREATE OR REPLACE PROCEDURE findMin(x in number,y in number,z out number)
  2    is
  3    begin
  4    if x<y then
  5    z:=x;
  6    else
  7    z:=y;
  8    end if;
  9    end;
 10    /

Procedure created.

SQL> declare
  2      a number;
  3      b number;
  4      c number;
  5      begin
  6       a:=23;
  7       b:=45;
  8       findMin(a,b,c);
  9       dbms_output.put_line('MINIMUM is '||c);
 10      end;
 11     /
MINIMUM is 23

PL/SQL procedure successfully completed.

SQL> DECLARE
  2             a number:=&a;
  3          PROCEDURE cubeNum(x IN OUT number) IS
  4          BEGIN
  5             x:=x*x*x;
  6          END;
  7          BEGIN
  8             cubeNum(a);
  9         dbms_output.put_line(' cube of number: ' || a);
 10     END;
 11     /
Enter value for a: 3
old   2:            a number:=&a;
new   2:            a number:=3;
cube of number: 27

PL/SQL procedure successfully completed.

SQL> DECLARE
  2     s VARCHAR2(10) := 'abccba';
  3     l VARCHAR2(20);
  4    t VARCHAR2(10);
  5    BEGIN
  6    FOR i IN REVERSE 1..Length(s) LOOP
  7    l := Substr(s, i, 1);
  8    t := t||''||l;
  9    END LOOP;
 10
 11     IF t = s THEN
 12     dbms_output.Put_line(t||''||' is palindrome');
 13     ELSE
 14   dbms_output.Put_line(t||'' ||' is not palindrome');
 15    END IF;
 16    END;
 17    /
abccba is palindrome

PL/SQL procedure successfully completed.

SQL> CREATE TABLE DEPT117 (
  2    DEPT_NO NUMBER(3) PRIMARY KEY,
  3    DNAME VARCHAR2(20),
  4    DLOC VARCHAR2(20)
  5  );

Table created.

SQL> INSERT INTO DEPT117 (DEPT_NO, DNAME, DLOC) VALUES (100, 'CSE', 'TP');

1 row created.

SQL> INSERT INTO DEPT117 (DEPT_NO, DNAME, DLOC) VALUES (110, 'MECH', 'MBLOCK');

1 row created.

SQL> INSERT INTO DEPT117 (DEPT_NO, DNAME, DLOC) VALUES (120, 'CIVIL', 'CBLOCK');

1 row created.

SQL> INSERT INTO DEPT117 (DEPT_NO, DNAME, DLOC) VALUES (40, 'ELEC', 'EBLOCK');

1 row created.

SQL> INSERT INTO DEPT117 (DEPT_NO, DNAME, DLOC) VALUES (50, 'BIOTECH', 'BIOBLOCK');

1 row created.

SQL> select * from DEPT117;

   DEPT_NO DNAME                DLOC
---------- -------------------- --------------------
       100 CSE                  TP
       110 MECH                 MBLOCK
       120 CIVIL                CBLOCK
        40 ELEC                 EBLOCK
        50 BIOTECH              BIOBLOCK

SQL> CREATE OR REPLACE PROCEDURE delete_row (p_id IN NUMBER)
  2    2  AS
  3    3  BEGIN
  4    4    DELETE FROM DEPT117 WHERE DEPT_NO = p_id;
  5    5    COMMIT;
  6    6    DBMS_OUTPUT.PUT_LINE('Row deleted successfully');
  7    7  EXCEPTION
  8    8    WHEN OTHERS THEN
  9    9      DBMS_OUTPUT.PUT_LINE('Error: ' || SQLCODE || ' - ' || SQLERRM);
 10   10      ROLLBACK;
 11   11  END;
 12   12  /
 13
 14  BEGIN
 15    2    delete_row(50);
 16    3  END;
 17    4  /
 18  PL/SQL procedure successfully completed.
 19  SELECT * FROM DEPT117;
 20
 21     DEPT_NO DNAME      DLOC
 22  ---------- ---------- ----------
 23         100 CSE        TP
 24         110 MECH       MBLOCK
 25         120 CIVIL      CBLOCK
 26          40 ELEC       EBLOCK
 27  SQL>